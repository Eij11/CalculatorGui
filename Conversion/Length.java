/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Conversion;

import calculations.Others;
import java.awt.Image;
import javax.swing.ImageIcon;

/**
 *
 * @author eljon
 */
public class Length extends javax.swing.JFrame {

    /**
     * Creates new form Length
     */
    public Length() {
        initComponents();
        
        Image icon = new ImageIcon(this.getClass().getResource("icons8_math_50px.png")).getImage();
        this.setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jbt_back = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jCB1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton_Convert = new javax.swing.JButton();
        jButton_Clear = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jCB2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Length Conversion");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_length_26px.png"))); // NOI18N
        jPanel3.add(jLabel1);
        jLabel1.setBounds(90, 17, 26, 26);

        jbt_back.setBackground(new java.awt.Color(0, 0, 0));
        jbt_back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_left_arrow_32px.png"))); // NOI18N
        jbt_back.setBorder(null);
        jbt_back.setBorderPainted(false);
        jbt_back.setContentAreaFilled(false);
        jbt_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_backActionPerformed(evt);
            }
        });
        jPanel3.add(jbt_back);
        jbt_back.setBounds(0, 0, 32, 32);

        jLabel3.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("LENGTH");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(130, 20, 59, 26);

        jCB1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jCB1.setForeground(new java.awt.Color(0, 208, 201));
        jCB1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Meter", "Milimeters", "Centimeter", "Inch", "Foot", "Mile" }));
        jCB1.setBorder(null);
        jPanel3.add(jCB1);
        jCB1.setBounds(180, 80, 96, 50);

        jTextField1.setBackground(new java.awt.Color(49, 104, 91));
        jTextField1.setColumns(3);
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setBorder(null);
        jPanel3.add(jTextField1);
        jTextField1.setBounds(30, 80, 110, 50);

        jSeparator1.setBackground(new java.awt.Color(0, 51, 51));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(jSeparator1);
        jSeparator1.setBounds(30, 140, 110, 10);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pcis/gradient(2).png"))); // NOI18N
        jPanel3.add(jLabel2);
        jLabel2.setBounds(0, 0, 320, 190);

        jPanel4.setBackground(new java.awt.Color(32, 70, 61));

        jButton_Convert.setText("Convert");
        jButton_Convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ConvertActionPerformed(evt);
            }
        });

        jButton_Clear.setText("Clear");
        jButton_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ClearActionPerformed(evt);
            }
        });

        jTextField2.setBackground(new java.awt.Color(49, 104, 91));
        jTextField2.setColumns(3);
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setBorder(null);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(0, 51, 51));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        jCB2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jCB2.setForeground(new java.awt.Color(0, 208, 201));
        jCB2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Meter", "Milimeters", "Centimeter", "Inch", "Foot", "Mile" }));
        jCB2.setBorder(null);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addComponent(jCB2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(132, 132, 132)
                    .addComponent(jButton_Convert)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton_Clear)
                    .addContainerGap(22, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap(157, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton_Convert)
                        .addComponent(jButton_Clear))
                    .addGap(34, 34, 34)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(324, 407));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbt_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_backActionPerformed
        Others others = new Others();
        others.show();

        dispose();
    }//GEN-LAST:event_jbt_backActionPerformed

    private void jButton_ConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ConvertActionPerformed
        String box1 = (String)jCB1.getSelectedItem();
        String box2 = (String)jCB2.getSelectedItem();

        if(box1.equals("Meter") && box2.equals("Milimeters")){
            double Meter = Double.parseDouble(jTextField1.getText());

            double Milimeters = (double)(Meter*1000);

            jTextField2.setText(String.valueOf(Milimeters));
        }

        else if(box1.equals("Meter") && box2.equals("Centimeter")){
            double Meter = Double.parseDouble(jTextField1.getText());

            double Centimeter = (double)(Meter * 100);

            jTextField2.setText(String.valueOf(Centimeter));
        }
        else if(box1.equals("Meter") && box2.equals("Inch")){
            double Meter = Double.parseDouble(jTextField1.getText());

            double Inch = (double)(Meter * 39.3701 );

            jTextField2.setText(String.valueOf(Inch));
        }
        else if(box1.equals("Meter") && box2.equals("Foot")){
            double Meter = Double.parseDouble(jTextField1.getText());

            double Foot = (double)(Meter * 3.281);

            jTextField2.setText(String.valueOf(Foot));
        }
        else if(box1.equals("Meter") && box2.equals("Mile")){
            double Meter = Double.parseDouble(jTextField1.getText());

            double Mile = (double)(Meter / 1609);

            jTextField2.setText(String.valueOf(Mile));
        }
        else if(box1.equals("Meter") && box2.equals("Meter")){
            double Celcius = Double.parseDouble(jTextField1.getText());
            jTextField2.setText(String.valueOf(Celcius));
        }

        //Milimeters

        if(box1.equals("Milimeters") && box2.equals("Meter")){
            double Milimeters = Double.parseDouble(jTextField1.getText());

            double Meter = (double)(Milimeters / 1000);

            jTextField2.setText(String.valueOf(Meter));
        }

        else if(box1.equals("Milimeters") && box2.equals("Centimeter")){
            double Milimeters = Double.parseDouble(jTextField1.getText());

            double Centimeter = (double)(Milimeters / 10);

            jTextField2.setText(String.valueOf(Centimeter));
        }
        else if(box1.equals("Milimeters") && box2.equals("Inch")){
            double Milimeters = Double.parseDouble(jTextField1.getText());

            double Inch = (double)(Milimeters / 25.4 );

            jTextField2.setText(String.valueOf(Inch));
        }
        else if(box1.equals("Milimeters") && box2.equals("Foot")){
            double Milimeters = Double.parseDouble(jTextField1.getText());

            double Foot = (double)(Milimeters / 305);

            jTextField2.setText(String.valueOf(Foot));
        }
        else if(box1.equals("Milimeters") && box2.equals("Mile")){
            double Milimeters = Double.parseDouble(jTextField1.getText());

            double Mile = (double)(Milimeters / 1.609e+6);

            jTextField2.setText(String.valueOf(Mile));
        }
        else if(box1.equals("Milimeters") && box2.equals("Milimeters")){
            double Celcius = Double.parseDouble(jTextField1.getText());
            jTextField2.setText(String.valueOf(Celcius));
        }

        //Centimeter

        if(box1.equals("Centimeter") && box2.equals("Meter")){
            double Centimeter = Double.parseDouble(jTextField1.getText());

            double Meter = (double)(Centimeter / 100);

            jTextField2.setText(String.valueOf(Meter));
        }

        else if(box1.equals("Centimeter") && box2.equals("Milimeters")){
            double Centimeter = Double.parseDouble(jTextField1.getText());

            double Milimeters = (double)(Centimeter * 10);

            jTextField2.setText(String.valueOf(Milimeters));
        }
        else if(box1.equals("Centimeter") && box2.equals("Inch")){
            double Centimeter = Double.parseDouble(jTextField1.getText());

            double Inch = (double)(Centimeter / 2.54 );

            jTextField2.setText(String.valueOf(Inch));
        }
        else if(box1.equals("Centimeter") && box2.equals("Foot")){
            double Centimeter = Double.parseDouble(jTextField1.getText());

            double Foot = (double)(Centimeter / 30.48);

            jTextField2.setText(String.valueOf(Foot));
        }
        else if(box1.equals("Centimeter") && box2.equals("Mile")){
            double Centimeter = Double.parseDouble(jTextField1.getText());

            double Mile = (double)(Centimeter / 160934);

            jTextField2.setText(String.valueOf(Mile));
        }
        else if(box1.equals("Centimeter") && box2.equals("Centimeter")){
            double Celcius = Double.parseDouble(jTextField1.getText());
            jTextField2.setText(String.valueOf(Celcius));
        }

        //Inch

        if(box1.equals("Inch") && box2.equals("Meter")){
            double Inch = Double.parseDouble(jTextField1.getText());

            double Meter = (double)(Inch / 39.37);

            jTextField2.setText(String.valueOf(Meter));
        }

        else if(box1.equals("Inch") && box2.equals("Milimeters")){
            double Inch = Double.parseDouble(jTextField1.getText());

            double Milimeters = (double)(Inch * 25.4);

            jTextField2.setText(String.valueOf(Milimeters));
        }
        else if(box1.equals("Inch") && box2.equals("Centimeter")){
            double Inch = Double.parseDouble(jTextField1.getText());

            double Centimeter = (double)(Inch * 2.54 );

            jTextField2.setText(String.valueOf(Centimeter));
        }
        else if(box1.equals("Inch") && box2.equals("Foot")){
            double Inch = Double.parseDouble(jTextField1.getText());

            double Foot = (double)(Inch / 12);

            jTextField2.setText(String.valueOf(Foot));
        }
        else if(box1.equals("Inch") && box2.equals("Mile")){
            double Inch = Double.parseDouble(jTextField1.getText());

            double Mile = (double)(Inch / 63360);

            jTextField2.setText(String.valueOf(Mile));
        }
        else if(box1.equals("Inch") && box2.equals("Inch")){
            double Celcius = Double.parseDouble(jTextField1.getText());
            jTextField2.setText(String.valueOf(Celcius));
        }

        //Foot

        if(box1.equals("Foot") && box2.equals("Meter")){
            double Foot = Double.parseDouble(jTextField1.getText());

            double Meter = (double)(Foot / 3.281);

            jTextField2.setText(String.valueOf(Meter));
        }

        else if(box1.equals("Foot") && box2.equals("Milimeters")){
            double Foot = Double.parseDouble(jTextField1.getText());

            double Milimeters = (double)(Foot * 305);

            jTextField2.setText(String.valueOf(Milimeters));
        }
        else if(box1.equals("Foot") && box2.equals("Centimeter")){
            double Foot = Double.parseDouble(jTextField1.getText());

            double Centimeter = (double)(Foot * 30.48 );

            jTextField2.setText(String.valueOf(Centimeter));
        }
        else if(box1.equals("Foot") && box2.equals("Inch")){
            double Foot = Double.parseDouble(jTextField1.getText());

            double Inch = (double)(Foot * 12);

            jTextField2.setText(String.valueOf(Inch));
        }
        else if(box1.equals("Foot") && box2.equals("Mile")){
            double Foot = Double.parseDouble(jTextField1.getText());

            double Mile = (double)(Foot / 5280);

            jTextField2.setText(String.valueOf(Mile));
        }
        else if(box1.equals("Foot") && box2.equals("Foot")){
            double Celcius = Double.parseDouble(jTextField1.getText());
            jTextField2.setText(String.valueOf(Celcius));
        }

        //Mile

        if(box1.equals("Mile") && box2.equals("Meter")){
            double Mile = Double.parseDouble(jTextField1.getText());

            double Meter = (double)(Mile * 1609);

            jTextField2.setText(String.valueOf(Meter));
        }

        else if(box1.equals("Mile") && box2.equals("Milimeters")){
            double Mile = Double.parseDouble(jTextField1.getText());

            double Milimeters = (double)(Mile * 1.609e+6);

            jTextField2.setText(String.valueOf(Milimeters));
        }
        else if(box1.equals("Mile") && box2.equals("Centimeter")){
            double Mile = Double.parseDouble(jTextField1.getText());

            double Centimeter = (double)(Mile * 160934 );

            jTextField2.setText(String.valueOf(Centimeter));
        }
        else if(box1.equals("Mile") && box2.equals("Inch")){
            double Mile = Double.parseDouble(jTextField1.getText());

            double Inch = (double)(Mile * 63360);

            jTextField2.setText(String.valueOf(Inch));
        }
        else if(box1.equals("Mile") && box2.equals("Foot")){
            double Mile = Double.parseDouble(jTextField1.getText());

            double Foot = (double)(Mile * 5280);

            jTextField2.setText(String.valueOf(Foot));
        }
        else if(box1.equals("Mile") && box2.equals("Mile")){
            double Celcius = Double.parseDouble(jTextField1.getText());
            jTextField2.setText(String.valueOf(Celcius));
        }
    }//GEN-LAST:event_jButton_ConvertActionPerformed

    private void jButton_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ClearActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
    }//GEN-LAST:event_jButton_ClearActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Length.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Length.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Length.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Length.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Length().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Clear;
    private javax.swing.JButton jButton_Convert;
    private javax.swing.JComboBox<String> jCB1;
    private javax.swing.JComboBox<String> jCB2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton jbt_back;
    // End of variables declaration//GEN-END:variables
}
